{"version":3,"sources":["images/logo.png","markdown/about_me.md","markdown/learn_more.md","markdown/testimonials.md","components/footer.tsx","components/jumbotron-logo.tsx","components/home.tsx","components/contact-me.tsx","components/main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Footer","window","scrollTo","top","behavior","className","Row","Col","onClick","backToTop","Button","variant","href","React","Component","JumbotronLogo","style","maxHeight","maxWidth","src","logo","alt","this","Home","props","servicesRef","createRef","aboutMeRef","testimonialsRef","contactRef","scrollToContent","scrollToRef","ref","current","scrollIntoView","state","files","Map","show","collapsed","map","fetch","aboutMe","then","res","text","md","set","setState","learnMore","testimonials","handleShow","bind","handleClose","newCollapse","markdown","backgroundColor","query","render","Navbar","sticky","bg","Nav","Link","color","id","setCollapsed","isOpen","navbar","role","cascade","triggerOnce","fraction","duration","source","get","skipHtml","Container","fluid","Modal","size","onHide","centered","Header","Title","Body","escapeHtml","ContactMe","Main","basename","process","exact","path","component","App","useEffect","document","title","Boolean","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8f420bec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6a287e4d.png\";","module.exports = __webpack_public_path__ + \"static/media/about_me.3cab3118.md\";","module.exports = __webpack_public_path__ + \"static/media/learn_more.232ffb02.md\";","module.exports = __webpack_public_path__ + \"static/media/testimonials.1845c6d6.md\";","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport { Button, Col, Row } from 'react-bootstrap';\r\n\r\nexport default class Footer extends React.Component {\r\n    \r\n    backToTop() {\r\n        window.scrollTo({\r\n          top: 0,\r\n          behavior: \"smooth\"\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <footer className=\"text-muted py-5\">\r\n                <div className=\"container\">\r\n                    <Row>\r\n                        <Col>     \r\n                            <p className=\"font-weight-light\">\r\n                                &copy; Hannah Martin 2020 (Website created by Daniel Randell)\r\n                            </p>\r\n                        </Col>\r\n                        <Col>\r\n                            <div onClick={() => this.backToTop()}>\r\n                                <p className=\"float-right\">\r\n                                    <Button variant=\"outline-secondary\" href=\"#\">Back to Top</Button> \r\n                                </p>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </footer>\r\n        );\r\n    }\r\n};","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from 'react';\r\nimport logo from '../images/logo.png'; // Tell webpack this JS file uses this image\r\n\r\nexport class JumbotronLogo extends Component {\r\n\r\n  style = {\r\n    maxHeight: \"100%\",\r\n    maxWidth: \"100%\",\r\n  };\r\n\r\n  render() {\r\n      return (\r\n          <>\r\n            <section className=\"jumbotron text-center bg-custom\">\r\n              <img src={logo} alt=\"Logo\" style={this.style} />\r\n            </section>\r\n          </>\r\n      );\r\n  }\r\n}","\r\nimport React, { Component, createRef, RefObject } from \"react\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport { Col, Container, Nav, Navbar, Row,  Modal, Button } from \"react-bootstrap\";\r\nimport { MDBNavbar, MDBHamburgerToggler, MDBCollapse, MDBNavbarNav } from \"mdbreact\";\r\nimport Media from \"react-media\";\r\nimport Footer from \"./footer\";\r\nimport { JumbotronLogo } from \"./jumbotron-logo\";\r\nimport ReactMarkdown from 'react-markdown/with-html'\r\n\r\nimport aboutMe from \"../markdown/about_me.md\";\r\nimport learnMore from \"../markdown/learn_more.md\";\r\nimport testimonials from \"../markdown/testimonials.md\";\r\n\r\ninterface HomeProps {\r\n    files: Map<string, string>;\r\n    show: boolean;\r\n    collapsed: boolean;\r\n}\r\n\r\nexport class Home extends Component<{}, HomeProps> {\r\n\r\n    private servicesRef = createRef<HTMLDivElement>();\r\n    private aboutMeRef = createRef<HTMLDivElement>();\r\n    private testimonialsRef = createRef<HTMLDivElement>();\r\n    private contactRef = createRef<HTMLDivElement>();\r\n    scrollToContent: any;\r\n\r\n    constructor(props: HomeProps) {\r\n        super(props);\r\n\r\n        this.state = { \r\n            files: new Map([]),\r\n            show: false,\r\n            collapsed: false,\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        let map = new Map();\r\n        fetch(aboutMe).then((res) => res.text()).then((md) => {\r\n            map.set('about', md);\r\n            this.setState({ files: map })\r\n        });\r\n        fetch(learnMore).then((res) => res.text()).then((md) => {\r\n            map.set('learnMore', md);\r\n            this.setState({ files: map })\r\n        });\r\n        fetch(testimonials).then((res) => res.text()).then((md) => {\r\n            map.set('testimonials', md);\r\n            this.setState({ files: map })\r\n        });\r\n\r\n        this.handleShow = this.handleShow.bind(this);\r\n\t\tthis.handleClose = this.handleClose.bind(this);\r\n    }\r\n\r\n    scrollToRef = (ref: RefObject<HTMLDivElement>) => {\r\n        if (ref.current) {\r\n            ref.current.scrollIntoView({behavior: 'smooth'});\r\n        } \r\n    }\r\n\r\n    handleClose() {\r\n\t\tthis.setState({ show: false });\r\n\t}\r\n\r\n\thandleShow() {\r\n        this.setState({ show: true });\r\n    }\r\n\r\n    setCollapsed(newCollapse: boolean) {\r\n        this.setState( { collapsed: newCollapse });\r\n    }\r\n\r\n    render() {\r\n        let markdown = this.state;\r\n        return (\r\n            <>\r\n                <header style={{ backgroundColor: \"#9bc8c9\" }}>\r\n                    <Media query=\"(min-width: 800px)\" render={() => (\r\n                        <Navbar sticky=\"top\" variant=\"light\" bg=\"custom\">\r\n                            <Nav className=\"mx-auto\">\r\n                                <Nav.Link onClick={() => {this.scrollToRef(this.aboutMeRef)}}>ABOUT ME</Nav.Link>\r\n                                <Nav.Link onClick={() => {this.scrollToRef(this.servicesRef)}}>SERVICES</Nav.Link>\r\n                                <Nav.Link onClick={() => {this.scrollToRef(this.testimonialsRef)}}>TESTIMONIALS</Nav.Link>\r\n                                <Nav.Link onClick={() => {this.scrollToRef(this.contactRef)}}>CONTACT ME</Nav.Link>\r\n                            </Nav>\r\n                        </Navbar>)}\r\n                    />\r\n                    <Media query=\"(max-width: 799px)\" render={() => (\r\n                        <MDBNavbar>\r\n                            <MDBHamburgerToggler color=\"white\" id=\"hamburger1\" onClick={() => { this.setCollapsed(!this.state.collapsed); }} />\r\n                            <MDBCollapse id='navbarCollapse1' isOpen={this.state.collapsed} navbar >\r\n                                <MDBNavbarNav >\r\n                                    <Nav.Link onClick={() => {this.scrollToRef(this.aboutMeRef)}}>ABOUT ME</Nav.Link >\r\n                                    <Nav.Link onClick={() => {this.scrollToRef(this.servicesRef)}}>SERVICES</Nav.Link>\r\n                                    <Nav.Link onClick={() => {this.scrollToRef(this.testimonialsRef)}}>TESTIMONIALS</Nav.Link>\r\n                                    <Nav.Link onClick={() => {this.scrollToRef(this.contactRef)}}>CONTACT ME</Nav.Link>\r\n                                </MDBNavbarNav>\r\n                            </MDBCollapse>\r\n                        </MDBNavbar>\r\n                    )}\r\n                    />\r\n                </header>\r\n                    <main role=\"main\">\r\n                        <JumbotronLogo />\r\n                        <Fade cascade triggerOnce fraction={0.25} duration={150}>\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"card card-custom\" ref={this.aboutMeRef}>\r\n                                <div className=\"card-body\">\r\n                                    <h4 className=\"card-main-title text-center\">About Me</h4>\r\n                                    <ReactMarkdown source={markdown.files.get('about')} skipHtml={true} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                             <div className=\"card card-custom bg-custom\" ref={this.servicesRef}>\r\n                                <div>\r\n                                    <h4 className=\"card-main-title-offset text-center\">Services</h4>\r\n                                    <Container fluid className=\"text-center\">\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <div className=\"card card-custom-mini shadow rounded\">\r\n                                                    <div className=\"card-body\">\r\n                                                        <h4 className=\"card-title text-center\">DE + FR &gt; English Translation</h4>\r\n                                                        <p> \r\n                                                        I offer a range of linguistic solutions and specialise in translation for various industries. My high attention to detail means that your texts will be translated to an excellent standard. \r\n                                                        </p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Col>\r\n                                            <Col >\r\n                                                    <div className=\"card card-custom-mini shadow rounded\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <h4 className=\"card-title text-center\">Proofreading</h4>\r\n                                                            <p> \r\n                                                            It’s quite common for non-native English speakers to translate documents into English. Unfortunately, this is when mistakes are made. I can proofread your text and ensure that it is completely accurate. \r\n                                                            </p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <div className=\"card card-custom-mini shadow rounded\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <h4 className=\"card-title text-center\">MT Post-Editing</h4>\r\n                                                            <p> \r\n                                                            Machine translation has drastically improved over the last few years thanks to AI, but certain texts will still require a native English speaker to check for and correct any errors.\r\n                                                            </p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <div className=\"card card-custom-mini shadow rounded\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <h4 className=\"card-title text-center\"> US into UK English</h4>\r\n                                                            <p> \r\n                                                            Despite being the same language, both US English and UK English often use different spelling or even completely different terms to describe the same thing. I can tailor your text for the British market.\r\n                                                            </p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Button className=\"btn-lg button-padding\" onClick={this.handleShow}> Learn More </Button>\r\n                                            <Modal size=\"lg\" show={this.state.show} onHide={this.handleClose} centered>\r\n                                                <Modal.Header className=\"text-center\">\r\n                                                <Modal.Title>Services</Modal.Title>\r\n                                                </Modal.Header>\r\n                                                <Modal.Body>\r\n                                                    <ReactMarkdown source={markdown.files.get('learnMore')} skipHtml={true} />\r\n                                                </Modal.Body>\r\n                                                <Modal.Footer>\r\n                                                <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                                                    Close\r\n                                                </Button>\r\n                                                </Modal.Footer>\r\n                                            </Modal>\r\n                                        </Container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"card card-custom\" ref={this.testimonialsRef}>\r\n                                    <div className=\"card-body\">\r\n                                        <h4 className=\"card-main-title text-center\">Testimonials</h4>\r\n                                        <ReactMarkdown source={markdown.files.get('testimonials')} skipHtml={false} escapeHtml={false} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"card card-custom bg-custom\" ref={this.contactRef}>\r\n                                    <div>\r\n                                        <h4 className=\"card-main-title-offset text-center\">Contact Me</h4>\r\n                                        <Container fluid className=\"text-center\">\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <p>If you would like to request a quote or wish to learn more about my services, please do not hesitate to contact me at <a href=\"mailto:hlm@translations.co.uk?subject=Email Enquiry\">hlm@translations.co.uk</a></p>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Fade>\r\n                    </main>\r\n                <Footer />\r\n            </>\r\n        );\r\n    }\r\n}\r\n","\r\nimport React, { Component } from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport Footer from \"./footer\";\r\n\r\nexport class ContactMe extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <header>\r\n                    <Navbar sticky=\"top\" variant=\"light\" bg=\"custom\">\r\n                        <Nav className=\"mx-auto\">\r\n                            <Nav.Link href=\"/\">HOME</Nav.Link>\r\n                        </Nav> \r\n                    </Navbar>\r\n                </header>\r\n                <h2>Contact Me</h2>\r\n                <Footer />\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Home } from './home';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { ContactMe } from './contact-me';\r\n\r\nexport class Main extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Router basename={`${process.env.PUBLIC_URL}/`}>\r\n                <Switch>\r\n                    <Route exact path='/contact-me' component={ContactMe} /> \r\n                    <Route exact path='/' component={Home} />\r\n                </Switch>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n","// This example is live editable\nimport React, { useEffect } from 'react';\n\n\nimport './css/bootstrap.scss';\nimport './App.scss';\nimport { Main } from './components/main';\n\nexport const App = () => {\n\n  useEffect(() => {\n    document.title = \"Hannah Martin Translation\"\n  }, []);\n\n  return (\n   <>\n    <Main />\n   </>\n  );\n };\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}